# Note: Make sure to add queues with associated tasks to the solo_queues list in
# validate_app_processes_config(), in app_processes.py, so they don't share a process with another queue.

- name: define reminder queue services
  become: cchq
  template:
    src: "../templates/common_supervisor_management.conf.j2"
    dest: "{{ service_home }}/{{ deploy_env }}_{{ item.dest_name }}"
  when: app_processes_config.celery_processes.get(inventory_hostname).reminder_queue is defined
  with_items:
    - dest_name: supervisor_queue_schedule_instances.conf
      process_name: queue_schedule_instances
      management_command: queue_schedule_instances
    - dest_name: supervisor_handle_survey_actions.conf
      process_name: handle_survey_actions
      management_command: handle_survey_actions
  tags:
    - services
  register: celery_reminder_queue_files

- name: define submission reprocessing queue services
  become: cchq
  template:
    src: "../templates/common_supervisor_management.conf.j2"
    dest: "{{ service_home }}/{{ deploy_env }}_supervisor_submission_reprocessing_queue.conf"
  when: app_processes_config.celery_processes.get(inventory_hostname).submission_reprocessing_queue is defined
  with_items:
    - process_name: submission_reprocessing_queue
      management_command: run_submission_reprocessing_queue
  tags:
    - services
  register: celery_submission_reprocessing_files

- name: define sms queue services
  become: cchq
  template:
    src: "../templates/common_supervisor_management.conf.j2"
    dest: "{{ service_home }}/{{ deploy_env }}_supervisor_sms_queue.conf"
  when: app_processes_config.celery_processes.get(inventory_hostname).sms_queue is defined
  with_items:
    - process_name: sms_queue
      management_command: run_sms_queue
  tags:
    - services
  register: celery_sms_files

- name: Add celery_bash_runner files
  template:
    src: "../templates/celery_bash_runner.sh.j2"
    dest: "{{ service_home }}/{{ deploy_env }}_{{ item.file_name }}"
  with_items:
    - file_name: "celery_bash_runner.sh"
    - file_name: "celery_bash_runner_optimized.sh"
      python_options: "-O"
  tags:
    - services
  register: celery_bash_runner_files

- name: define speical celery services
  become: cchq
  template:
    src: "{{ item.template }}"
    dest: "{{ service_home }}/{{ deploy_env }}_{{ item.file_name }}"
  when: item.should_apply
  with_items:
    - template: ../templates/supervisor_celery_flower.conf.j2
      file_name: supervisor_celery_flower.conf
      should_apply: "{{ app_processes_config.celery_processes.get(inventory_hostname).flower is defined }}"
    - template: ../templates/supervisor_celery_beat.conf.j2
      file_name: supervisor_celery_beat.conf
      should_apply: "{{ app_processes_config.celery_processes.get(inventory_hostname).beat is defined }}"
    - template: ../templates/supervisor_errand_boy.conf
      file_name: supervisor_errand_boy.conf
      should_apply: yes
  tags:
    - services
  register: celery_special_service_files

- name: define celery workers
  become: cchq
  template:
    src: "../templates/supervisor_celery_workers.conf.j2"
    dest: "{{ service_home }}/{{ deploy_env }}_supervisor_celery_workers.conf"
  when: app_processes_config.celery_processes.get(inventory_hostname) is defined
  with_items:
    - env_vars:
        http_proxy: "{% if http_proxy_address is defined %}http://{{ http_proxy_address }}:{{ http_proxy_port }}{% endif %}"
        https_proxy: "{% if http_proxy_address is defined %}https://{{ http_proxy_address }}:{{ http_proxy_port }}{% endif %}"
        no_proxy: "{% if http_proxy_address is defined %}{{ groups['all'] | join(',') }},{{ app_processes_config.additional_no_proxy_hosts }}{% endif %}"
        TMPDIR: '{{ encrypted_tmp }}'
  tags:
    - services
  register: celery_worker_files

- set_fact:
    celery_supervisor_files: "{{ celery_reminder_queue_files.get('results', []) + celery_submission_reprocessing_files.get('results', []) + celery_sms_files.get('results', []) + celery_bash_runner_files.get('results', []) + celery_special_service_files.get('results', []) + celery_worker_files.get('results', []) }}"
  tags:
    - services

- set_fact:
    celery_managed_files: "{{ celery_supervisor_files|selectattr('dest', 'string')|map(attribute='dest')|list + celery_supervisor_files|selectattr('path', 'string')|map(attribute='path')|select|list }}"
  tags:
    - services
