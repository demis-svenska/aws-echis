- name: Install formplayer packages
  become: yes
  apt:
    name:
      - sqlite3
      - libsqlite3-dev

- name: Create purging cron jobs
  become: yes
  cron:
    name: "{{ item.name }}"
    special_time: daily
    job: "/usr/sbin/tmpreaper {{ item.time_spec }} {{ item.dir }}"
    user: root
    cron_file: purge_formplayer_files
  with_items:
    - {name: 'Purge temp files', dir: '/tmp', time_spec: '2d'}
    - {name: 'Purge sqlite db files', dir: '{{ formplayer_data_dir }}', time_spec: '{{ formplayer_purge_time_spec }}'}
  tags:
    - cron

- name: Copy formplayer's archive_dbs
  become: yes
  copy:
    src: "archive_dbs.sh"
    dest: "/usr/local/sbin/archive_dbs.sh"
    group: "{{ cchq_user }}"
    owner: "{{ cchq_user }}"
    mode: 0700
  tags:
    - cron

- name: Create cron job to archive sqlite db files
  become: yes
  cron:
    # should run every minute by default
    name: 'Archive sqlite db files'
    job: '/usr/local/sbin/archive_dbs.sh {{ formplayer_data_dir }} +{{ formplayer_archive_time_spec }}'
    user: '{{ cchq_user }}'
  when: formplayer_archive_time_spec is defined
  tags:
    - cron

- name: Formplayer build dir
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0755
  tags:
    - fp-localsettings
    - localsettings
    - formplayer_deploy
  with_items:
    - "{{ formplayer_build_dir }}"
    - "{{ formplayer_release_dir }}"
    - "{{ formplayer_data_dir }}"

- name: Download formplayer release
  get_url:
    url: "{{ formplayer_build_url }}"
    dest: "{{ formplayer_release_dir }}/formplayer.jar"
    mode: 0744
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
  tags:
    - formplayer_deploy

- name: Check if the "current" directory exists
  stat:
    path: "{{ formplayer_build_dir }}/current"
  register: current_stat
  tags:
    - formplayer_deploy


# This task copies the respective config files from "current", if applicable
# so that the next tasks print out a nice diff instead of the full contents of the file
- name: Copy config files from current release
  become: yes
  copy:
    remote_src: yes
    src: "{{ formplayer_build_dir }}/current/{{ item }}"
    dest: "{{ formplayer_release_dir }}/{{ item }}"
  with_items:
    - application.properties
    - sentry.properties
  tags:
    - formplayer_deploy
  when: new_release_name != None

- name: Copy Spring application.properties
  become: yes
  template:
    src: application.properties.j2
    dest: "{{ formplayer_release_dir }}/application.properties"
    group: cchq
    owner: cchq
    mode: 0644
  tags:
    - fp-localsettings
    - localsettings
    - formplayer_deploy

- name: Copy sentry.properties
  become: yes
  template:
    src: sentry.properties.j2
    dest: "{{ formplayer_release_dir }}/sentry.properties"
    group: cchq
    owner: cchq
    mode: 0644
  tags:
    - fp-localsettings
    - localsettings
    - formplayer_deploy

# This should be the last task in the file
# (and certainly the last one tagged with `formplayer_deploy`)
# so that if setting up a release fails, `current` never gets linked to it
# giving us nearly atomic formplayer deploys
- name: Link formplayer jar
  become: yes
  file:
    state: link
    src: "{{ formplayer_release_dir }}"
    path: "{{ formplayer_build_dir }}/current"
    mode: 0755
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
  tags:
    - formplayer_deploy
  when: new_release_name != None
